/* eslint-disable */
export const WAIT_FOR = Object.freeze({
  APP: {
    BLANKET: 'app.blanket',
  },
  AUTH: {
    ALL: 'auth.*',
    SIGNUP: 'auth.signup',
    LOGIN: 'auth.login',
    FORGOT: 'auth.forgot',
    RESET: 'auth.reset',
    VERIFY: 'auth.verify',
    RESEND: 'auth.resend',
    LOGOUT: 'auth.logout',
  },
  ONBOARD: {
    SAVE: 'onboard.save',
  },
  USER: {
    ALL: 'user.*',
    GET: 'user.get',
    CREATE: 'user.create',
    UPDATE: 'user.update',
    DELETE: 'user.delete',
    CHECKOUT_DATA: 'user.checkout_data',
    UPDATE_LANGUAGE: 'user.update_language',
  },
  DASHBOARD: {
    ALL: 'dashboard.*',
    HOSTS: {
      HOST: 'dashboard.host',
      HOST_ID: (id) => `dashboard.host.hide.${id}`,
    },
    ALERT_HISTORY: 'dashboard.alerts',
    WEB_CHECK_WIZARD: {
      ALL: 'dashboard.web_check_wizard.*',
      CREATE: 'dashboard.web_check_wizard.create',
    }
  },
  HOST: {
    ALL: 'host.*',
    GET: 'host.get',
    CREATE: 'host.create',
    UPDATE: 'host.update',
    DELETE: 'host.delete',
    ID: (id) => `host.${id}`,
    ALL_ID: (id) => `host.*.${id}`,
    DELETE_ID: (id) => `host.delete.${id}`,
    CONFIRM_DELETE: 'host.confirm',
    CONFIRM_DELETE_ID: (id) => `host.confirm.${id}`,
    SUMMARY_LIST: 'host.summary_list',
    GUIDE: 'host.guide',
  },
  EVENT: {
    ALL: 'event.*',
    GET: 'event.get',
    COMMENT: 'event.comment',
    DELETE: 'event.delete',
    UPDATE: 'event.update',
    CONFIRM_CANCEL_REMINDER_ID: (id) => `event.reminder.cancel.${id}`,
    DELETE_ID: (id) => `event.delete.${id}`,
    CONFIRM_DELETE_ID: (id) => `event.confirm.${id}`,
  },
  JOBMON_RESULT: {
    ALL: 'jobmon_result.*',
    GET: 'jobmon_result.get',
    DELETE: 'jobmon_result.delete',
    DELETE_ID: (id) => `jobmon_result.delete.${id}`,
    CONFIRM_DELETE_ID: (id) => `jobmon_result.confirm.${id}`,
  },
  CONNECT_VALIDATION: 'connect_validation.get',
  CUSTOM_CHECK: {
    ALL: 'custom_check.*',
    GET: 'custom_check.get',
    CREATE: 'custom_check.create',
    UPDATE: 'custom_check.update',
    DELETE: 'custom_check.delete',
    DELETE_ID: (id) => `custom_check.delete.${id}`,
    CONFIRM_DELETE_ID: (id) => `custom_check.confirm.${id}`,
  },
  SERVICE_CHECK: {
    ALL: 'service_check.*',
    GET: 'service_check.get',
    CREATE: 'service_check.create',
    UPDATE: 'service_check.update',
    DELETE: 'service_check.delete',
    PREFLIGHT: 'service_check.preflight',
    DELETE_ID: (id) => `service_check.delete.${id}`,
    CONFIRM_DELETE_ID: (id) => `service_check.confirm.${id}`,
  },
  SNMP_CHECK: {
    ALL: 'snmp_check.*',
    GET: 'snmp_check.get',
    CREATE: 'snmp_check.create',
    UPDATE: 'snmp_check.update',
    DELETE: 'snmp_check.delete',
    DELETE_ID: (id) => `snmp_check.delete.${id}`,
    CONFIRM_DELETE_ID: (id) => `snmp_check.confirm.${id}`,
  },
  WEB_CHECK: {
    ALL: 'web_check.*',
    GET: 'web_check.get',
    CREATE: 'web_check.create',
    UPDATE: 'web_check.update',
    DELETE: 'web_check.delete',
    PREFLIGHT: 'web_check.preflight',
    DELETE_ID: (id) => `web_check.delete.${id}`,
    CONFIRM_DELETE_ID: (id) => `web_check.confirm.${id}`,
  },
  FRONTMAN: {
    ALL: 'frontman.*',
    GET: 'frontman.get',
    CREATE: 'frontman.create',
    UPDATE: 'frontman.update',
    DELETE: 'frontman.delete',
    ALL_ID: (id) => `frontman.*.${id}`,
    DELETE_ID: (id) => `frontman.delete.${id}`,
    CONFIRM_DELETE: 'frontman.confirm',
    CONFIRM_DELETE_ID: (id) => `frontman.confirm.${id}`,
  },
  SUB_UNIT: {
    ALL: 'sub_unit.*',
    GET: 'sub_unit.get',
    CREATE: 'sub_unit.create',
    UPDATE: 'sub_unit.update',
    DELETE: 'sub_unit.delete',
    CONFIRM_DELETE_ID: (id) => `sub_unit.confirm.${id}`,
  },
  TEAM_MEMBER: {
    ALL: 'team_member.*',
    GET: 'team_member.get',
    CREATE: 'team_member.create',
    UPDATE: 'team_member.update',
    UPDATE_ID: (id) => `team_member.update.${id}`,
    DELETE: 'team_member.delete',
    DELETE_ID: (id) => `api_token.delete.${id}`,
    CONFIRM_DELETE_ID: (id) => `api_token.confirm.${id}`,
  },
  TEAM_SETTING: {
    SUB_UNIT_MANAGEMENT: {
      UPDATE: 'team_setting.sub_unit_management.update',
    }
  },
  TEAM: {
    ALL: 'team.*',
    GET: 'team.get',
    CREATE: 'team.create',
    UPDATE: 'team.update',
    DELETE: 'team.delete',
  },
  RECIPIENT: {
    ALL: 'recipient.*',
    GET: 'recipient.get',
    CREATE: 'recipient.create',
    UPDATE: 'recipient.update',
    UPDATE_ID: (id) => `recipient.update.${id}`,
    DELETE: 'recipient.delete',
    DELETE_ID: (id) => `recipient.delete.${id}`,
    CONFIRM_DELETE_ID: (id) => `recipient.confirm.${id}`,
    LOGS: 'recipient.logs',
    SEND_TEST_MESSAGE: 'recipient.send_test_message',
  },
  API_TOKEN: {
    ALL: 'api_token.*',
    GET: 'api_token.get',
    CREATE: 'api_token.create',
    UPDATE: 'api_token.update',
    DELETE: 'api_token.delete',
    DELETE_ID: (id) => `api_token.delete.${id}`,
    CONFIRM_DELETE_ID: (id) => `api_token.confirm.${id}`,
  },
  HOST_ACTIVITY: {
    ALL: 'host_activity.*',
    GET: 'host_activity.get',
  },
  TEAM_ACTIVITY: {
    ALL: 'team_activity.*',
    GET: 'team_activity.get',
  },
  STATUS_PAGE: {
    ALL: 'status_page.*',
    GET: 'status_page.get',
    CREATE: 'status_page.create',
    IMAGE_CREATE: 'status_page.image.create',
    UPDATE: 'status_page.update',
    DELETE: 'status_page.delete',
    IMAGE_DELETE: 'status_page.image.delete',
    DELETE_ID: (id) => `status_page.delete.${id}`,
    CONFIRM_DELETE_ID: (id) => `status_page.confirm.${id}`,
  },
  RULE: {
    ALL: 'rule.*',
    GET: 'rule.get',
    CREATE: 'rule.create',
    UPDATE: 'rule.update',
    DELETE: 'rule.delete',
    ALL_ID: (id) => `rule.*.${id}`,
    DELETE_ID: (id) => `rule.delete.${id}`,
    CONFIRM_DELETE_ID: (id) => `rule.confirm.${id}`,
  },
  REPORT: {
    ALL: 'report.*',
    GET: 'report.get',
    CREATE: 'report.create',
    UPDATE: 'report.update',
    DELETE: 'report.delete',
    DOWNLOAD: 'report.download',
  },
  REF_DATA: {
    FRONTMEN: 'ref-data.frontmen',
    TIMEZONES: 'ref-data.timezones'
  },
  SETTINGS: {
    ALL: 'settings.*',
    HEARTBEAT: {
      AGENT: 'settings.heartbeat.agent',
      FRONTMAN: 'settings.heartbeat.frontman',
      CUSTOM: 'settings.heartbeat.custom',
    }
  }
});
