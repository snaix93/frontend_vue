export default {
  app: {
    TVMode: 'TV mode',
    exitTVMode: 'exit TV mode',
    drawer: {
      dashboard: 'dashboard',
      hosts: 'hosts',
      events: 'events',
      frontmen: 'frontmen',
      team: 'team',
      subUnits: 'sub-units',
      recipients: 'recipients',
      logOut: 'log out',
      minimize: 'minimize',
      maximize: 'maximize',
      settings: 'settings',
      alerting: '@:phrase.alerting',
      activity: 'activity',
      rules: 'rules',
      reports: 'reports',
      hostActivities: 'Host Activities',
      teamActivities: 'Team Activities',
      learnAndSupport: 'Learn & Support',
      statusPages: 'Status Pages',
      api: 'API',
      upgrade: '@:phrase.upgrade',
    },
    footer: {
      terms: 'Terms',
      privacy: 'Privacy',
      feedback: 'Feedback',
      imprint: 'Imprint',
    },
    support: {
      sendASupportInquiry: 'send a support inquiry',
      weAreHereToHelpYou:
        'We are here to help you. Drop us a line about any problems, feedback or feature requests. We will answer quickly.',
      sendMessage: 'send message',
      thankYouForYourMessage: 'Thank you for your message.',
      normallyYouWillGetAnAnswerWithin24Hours:
        'Normally you will get an answer within 24 hours.',
      stillLookingForHelp: 'Still looking for help?',
    },
    settingsPanel: {
      dashboardSettings: {
        heading: 'additional settings',
        miniCharts: {
          title: 'mini charts',
          subtitle: 'Previews the hosts CPU and memory utilization',
        },
        hideGreenHosts: {
          title: 'Only Show Hosts With Issues',
          subtitle: 'Hide hosts with no issues',
        },
        backgroundRefresh: {
          title: 'Background Refresh',
          subtitle: 'Toggle the auto-refresher',
        },
      },
    },
  },
  auth: {
    login: 'login',
    logIn: 'log in',
    logOut: 'log out',
    signup: 'signup',
    signUp: 'sign up',
    wrongCredentials: 'You entered a wrong email or password.',
    loggedOut: 'You were successfully logged out.',
    tokenError:
      'This verification token is not valid. Please make sure this password reset link is still valid.',
    forgotPassword: 'forgot password',
    resetPassword: 'reset password',
    forgotYourPassword: 'Forgot your password?',
    passwordReset:
      'Almost done! We sent you an e-mail with a link to reset your password.',
    passwordResetSuccess:
      'Success! You can now log in below with your new password.',
    notRegistered: 'Not signed up, yet?',
    aTemporaryErrorHasHappened: 'A temporary error has happened. Please try again later.',
    alreadyAuthenticated: 'Looks like you are already signed in to another account. Sign out and try again.',
    emailNotVerified: {
      title: 'You haven\'t verified your email address.',
      body: 'Your account is not fully activated. Please confirm your email address. We have sent you a link.',
    },
  },
  register: {
    main: {
      form: {
        heading: 'Get started absolutely free',
        subheading: 'Try risk-free for {days} days. No credit card required.',
      },
      aside: {
        heading: 'Try free for {days} days - incl. all features',
        subheadingBullet1: 'Windows & Linux, push alerting, reports, 30 days data history.',
        subheadingBullet2: 'Highly affordable at just €1,50 or $1.70 per host/month incl. all metrics & features.',
        subheadingBullet3: 'Try with no strings attached: No minimum cost or contractual lock-in. No credit card required.',
        subheading2: 'Have your first server monitored in 5 minutes and see for yourself!',
        quote: {
          body: '“Finally a monitoring solution that’s really easy and affordable. It took me only 20 minutes to connect all my servers to monitor bandwidth and availability.“',
          name: 'Mike Slodowski',
          role: 'Owner & IT Lead',
          company: 'magnusbox'
        }
      }
    },
    invitation: {
      subheading: 'Powerful. Simple. Affordable.',
      formHeading: 'Try CloudRadar for free with a <strong class="secondary--text">{savings} credit</strong> for <strong class="secondary--text">{days} days</strong>.',
    },
    form: {
      partner: {
        option1: 'I want to monitor my own infrastructure',
        option2: 'I want to monitor the infrastructure of my customers and my own',
      },
      button: 'start my free trial',
    },
    thanks: {
      heading: 'Thank You!',
      subheading: 'Please verify your e-mail by clicking on the link we just sent you.',
      hint: '(Can\'t find it? Check your SPAM folder, too.)',
    },
    verification: {
      successHeading: 'Congratulations!',
      successSubheading: 'Your account is now fully set up.',
      successBody: 'Discover CloudRadar\'s powerful features - log in to start monitoring:',
      errorHeading: 'We are sorry!',
      errorSubheading: 'Something went wrong',
      errorBody: 'Either we don\'t know the submitted e-mail or the verification code is wrong.',
    },
    noCreditCard: 'No credit card required',
    signUp: 'sign up',
    signUpNow: 'Sign Up Now',
    iAgreeToTheTermsAndConditions:
      'I agree to the <a href="{terms}" class="{cssClass}" target="_blank">terms & conditions</a> and the <a href="{privacy}" class="{cssClass}" target="_blank">privacy policy</a>.',
    alreadyRegistered: 'Already signed up?',
    logIn: 'log in',
    acceptTerms: 'You must agree to our terms & conditions and to our privacy policy.',
    joinTeamHeading: 'Get on board',
    youWereInvitedToJoinATeam: 'You were invited to join a<br>team at CloudRadar',
    pleaseFillOutTheFormBelow:
      'Please fill out the form below to create an account and get on board.',
    joinTeam: 'join the team',
    yourAccountHasBeenCreated: 'Thank you! Your account has been created.',
    youCanNowLogIn: 'You can now log in with your email and password.',
    goToLogin: 'Go to login',
    joinTeamFailed: 'Something went wrong. Please make sure your invitation link is valid.',
  },
  onboarding: {
    headerMain: 'Welcome to CloudRadar',
    step1: {
      header: 'We detected that the following settings are most suitable based on your location. Please confirm or adjust to your preferences.'
    },
    step2: {
      header: 'Almost there - tell us about yourself...',
      howManyHostsToMonitor: 'How many hosts / devices do you need to monitor?',
      reasonForSignupOptions: {
        replace: 'I want to replace our current monitoring tool',
        new: 'I want to set up our first monitoring tool',
        other: 'Other',
      }
    },
    completeUserSettingsSuccess: 'Hold tight... we\'re creating your CloudRadar account',
  },
  host: {
    name: 'hosts',
    details: 'host details',
    settings: 'host settings',
    editSettings: 'edit @:host.settings',
    create: '@:phrase.add host, server or device',
    deleteConfirm: 'Delete host "{name}"?',
    purgeFromReports: 'purge host from reports, too',
    ICMPCheck: 'ICMP Ping',
    ICMPCheckDescription: 'Check if host responds to ICMP echo requests.',
    ICMPCheckButton: '@:host.ICMPCheck',
    serviceCheck: 'TCP/UDP Port Checks',
    serviceCheckDescription:
      'Check if a TCP service like SMTP or HTTP (or any TCP service) is listening for connections.',
    serviceCheckButton: '@:host.serviceCheck',
    webCheck: 'Website Check',
    webCheckDescription: 'Check a Website for status and content.',
    webCheckButton: '@:host.webCheck',
    customCheck: 'Custom Check',
    customCheckDescription: 'Send check result by HTTP collected by your own scripts.',
    customCheckButton: '@:host.customCheck',
    SNMPCheck: 'SNMP Check',
    SNMPCheckResults: 'SNMP check results',
    SNMPCheckDescription: 'Monitor a device by SNMP',
    SNMPCheckButton: '@:host.SNMPCheck',
    enterSNMPCredentials: 'Enter SNMP credentials in the host settings to use this check.',
    serviceChecks: 'TCP / UDP Port / Service Checks',
    serviceChecksResults: 'TCP / Service check results',
    webChecks: 'website checks',
    webChecksResults: 'website checks results',
    customChecks: 'custom checks',
    customChecksResults: 'custom checks result',
    SNMPChecks: 'SNMP checks',
    SNMPChecksResults: 'SNMP checks result',
    addCheck: 'add check',
    addChecks: 'add checks',
    selectedChecks: 'selected checks',
    jobmon: 'Job monitoring',
    jobmonDescription: 'Monitor the execution of any job (scripts, executables, crons etc.).',
    jobmonButton: 'Job monitoring',
    activateAgentBasedMonitoring: 'Activate agent-based monitoring in the host settings to use this check.',
    SSLCertificateCheck: 'SSL certificate check',
    SSLCertificateCheckDescription: 'Checks a SSL certificate for validity.',
    SSLCertificateCheckButton: 'SSL cert. check',
    osMonitoringWithCagent: 'Inside OS Monitoring with @:phrase.cagent',
    cagentHint:
      'Leave blank if you want to monitor your server/host with the locally installed agent only.',
    cagentSetupFinishedHelpHint1: 'You can check your monitoring data here...',
    cagentSetupFinishedHelpHint2: '... or here.',
    cagentSetupFinishedHelpHint3: 'Click on the {0} icon in the respective host row.',
    installAgent: 'install agent',
    latestData: 'latest data',
    dataUnknown: 'Data unknown',
    hideFromDashboard: 'hide from dashboard',
    hideFromDashboardConfirm:
      'This will hide the host "{host}" from your default dashboard. You can add it back at any time from the host\'s configuration page.',
    showOnDashboard: 'Show on default dashboard',
    isShownOnDashboard: 'This host is showing on the default dashboard.',
    isNotShownOnDashboard:
      'This host is not currently showing on the default dashboard.',
    alertingIsActive: 'Alerting for this host is active.',
    alertingIsMuted: 'Alerting for this host is muted.',
    enableAlerting: 'Enable Alerting',
    rawValue: 'raw value',
    youHaveNoChecks: 'you have no checks.',
    createCheck: 'create check',
    reloadData: 'reload data',
    key: 'key',
    process: 'process | processes',
    graphsQuickView: 'Graphs (Quick View)',
    graphsExpertView: 'Graphs (Expert View)',
    metric: 'metric | metrics',
    alert: '@:phrase.alert | @:phrase.alerts',
    cpuBusyTotal: 'CPU Busy (1 min.) total',
    memoryAvailable: 'Memory used/available',
    thisHostHasNoDataToShowAtThisMoment:
      'this host has no data to show at this moment.',
    intranetHostBehindFirewall: 'Intranet-host behind firewall',
    locationPrivateFrontman: 'Location (private frontman)',
    missingPrivateFrontman: 'a location (private frontman) first',
    showServiceHostProcesses: 'show service host processes',
    showKernelTasks: 'show kernel tasks',
    noData: 'There\'s no data for this host, yet.',
    residentSetSize: 'resident set size',
    virtualMemorySize: 'virtual memory size',
    parameter: 'parameter | parameters',
    showFullContent: 'show full content',
    pleaseEnterAValidPublicIPAddress: 'Please enter a valid public IP address, a public resolvable FQDN or create a frontman in your local network first.',
    youAssignedTheHostToAFrontmanWhichSeemsToBeDisconnected: 'You assigned the host to a frontman which seems to be disconnected. Please check your frontman installation',
    pleaseEnterAnIPOrFQDN: 'Please enter an IP or FQDN for the host to activate this check.',
    errorStoringHistoricalData: 'Error storing historical data.',
    changingDataTypesBetweenDataSubmissionsIsNotSupported: 'Changing data types between data submission is not supported. The rule processing and the alerting is not effected by this error.',
    cagent: {
      connected: 'agent: connected',
      disconnected: 'agent: disconnected',
      pending: 'agent: waiting for installation',
    },
    state: {
      monitored: 'monitored',
      pending: 'not monitored',
    },
    processStates: {
      blocked: 'blocked',
      zombie: 'zombie',
      stopped: 'stopped',
      running: 'running',
      sleeping: 'sleeping',
      dead: 'dead',
      paging: 'paging',
      idle: 'idle',
      suspended: 'suspended',
    },
    serviceStates: {
      running: '@:host.processStates.running',
      started: 'started',
      paused: 'paused',
      stopped: '@:host.processStates.stopped',
      exited: 'exited',
      failed: 'failed',
      waiting: 'waiting',
      dev: 'dev',
      dead: '@:host.processStates.dead',
      autorestart: 'auto-restart',
    },
    firstCheck: {
      dialogHeading: '@:phrase.congratulation',
      dialogSubheading: 'Your host is now being monitored.',
      dialogText:
        'Have a look around and add more useful checks for your host.',
      dialogButton: '@:button.motivate',
    },
    addHostCagentPreDialog: {
      hostAddedSuccessfully: 'Host has been added successfully.',
      installAgentRecommended:
        'In order to get your monitoring fully functional you need to install a local agent on the monitored system. It\'s very simple and takes only a few minutes.',
      hostMonitoredWithAndWithoutAgent:
        'The monitoring agent enables all needed checks by default. You can add checks only if you use agent-based and agent-less monitoring in parallel.',
      hostMonitoredByAgentOnly:
        'The monitoring agent enables all needed checks by default. Your host is monitored by agent only. There is no need for further configuration.',
    },
    addHostCheckSuccessDialog: {
      doneHeading: 'You\'re done!',
      almostDoneHeading: 'Almost done...',
      hostBeingMonitored: 'Your host is now being monitored.',
      alertingRulesCreated: 'Alerting rules have been created.',
      recipientsChecking: 'Looking for active recipients...',
      recipientsSetup: 'Recipients for alerting are setup.',
      recipientsNotSetup: 'You don\'t have any active recipients for alerts.',
      doneButtonText: '@:button.motivate',
      doneSecondaryButtonText: 'Don\'t show this again',
      almostDoneButtonText: 'Add Recipient',
      almostDoneSecondaryButtonText: 'I\'ll do this later',
    },
    inventory: {
      title: 'host inventory',
      noData:
        'No data available. Please make sure the Cagent is installed correctly.',
      os: '@:phrase.os',
      memory: '@:phrase.memory',
      cpu: '@:phrase.cpu',
      ip: '@:phrase.ip',
      fqdn: '@:phrase.fqdn',
      cagent: '@:phrase.cagent',
    },
    snmp: {
      enable: 'Enable @:phrase.snmp',
      protocol: '@:phrase.snmp version',
      timeout: '@:phrase.snmp timeout (@:phrase.sec)',
      port: '@:phrase.snmp @:phrase.port',
      communityString: '@:phrase.snmp community string',
      securityLevel: '@:phrase.snmp security level',
      authenticationProtocol: 'Authentication protocol',
      privacyProtocol: 'Privacy protocol',
      username: '@:phrase.snmp username',
      authenticationPassword: 'Authentication password',
      privacyPassword: 'Privacy password',
      helpLink: 'Learn more about @:phrase.snmp',
    },
    jobmonResults: {
      title: 'Job Monitoring Results',
      showUnformattedOutput: 'show unformatted output',
      alertsOrWarningsSwitchedOff: 'alerts or warnings switched off',
      lastRun: 'last run',
      deleteConfirm: 'Delete results for job "{job}"?',
    },
    guide: {
      title: 'What do you want to monitor?',
      dontShowAgainText: 'Don\'t show this guide again',
      skipGuide: 'Skip guide (expert mode)',
      referToKbText: 'Refer to our knowledge base for more information',
      aLotMoreOptions: 'A lot more options can be added later.',
      pleaseSpecify: 'Please specify...',
      servicesToCheck: 'Services to check',

      agent: {
        title: 'server',
        description: 'CPU, memory, disk, process monitoring for Windows and Linux.',
        footer: 'Requires agent installation.',
        form: {
          title: 'Add Server inside monitoring by agent (CPU, memory, disk, processes)',
        },
      },
      frontman: {
        title: 'network device',
        description: 'Availability of intranet/network devices, eg. switches, routers, load balancers, printers, or any device with an IP address.',
        footer: 'Requires local software installation.',
        form: {
          title: 'Add an intranet/network device',
        },
      },
      public: {
        title: 'website/public service',
        description: 'Uptime, availability, and status of any public service or server like web servers, email servers, and device with a public IP address.',
        form: {
          title: 'Add a public host',
        },
      },
      labels: {
        connect: 'optionally include FQDN/IP address',
      },
      hints: {
        agent: 'Also monitor CPU, memory, disk, processes. Requires Linux or Windows on the device',
      },
      server: {
        question: 'My server is...',
        insideAnIntranet: '... inside an intranet behind a router. (private IP address)',
        directlyConnected: '... directly connected to the internet. (public IP address)',
        iDontKnow: '... I don\'t know. Use an universal option.'
      },
      website: {
        question: 'Mainly I want to monitor...',
        theStatus: '... the status and the content of a website.',
        theUptime: '... the uptime of the server itself and the services (ping, http, smtp, etc.)',
        iDontKnow: '... I don\'t know. I need help.',
        supportSubject: 'I need help setting up the monitoring for public servers',
        supportBody: 'Please describe what your server does and when do you want to receive alerts? What do you consider as an outage or undesired behavior?',
      }
    },
    listeningPorts: {
      title: 'TCP/UDP listening ports',
      pleaseUpgradeYourAgent: '<a href="{url}" target="_blank">Please upgrade your agent</a> for the discovery of listening ports.',
    },
    cpuSnapshots: {
      title: 'CPU Utilization Snapshots',
      learnMore: 'learn more about this feature.',
      pleaseUpgradeYourAgent: '<a href="{url}" target="_blank">Please upgrade your agent</a> to v1.1.0 or newer to enable CPU Utilization Snapshots.',
    },
    temperatures: {
      title: 'temperatures',
      states: {
        critical: 'critical',
        warm: 'warm',
        ok: 'ok',
        cold: 'cold',
      },
    },
    hyperVMetrics: {
      name: 'hyper V metrics',
      VMsTotal: 'VMs total',
      details: 'details',
    },
    docker: {
      name: 'docker containers',
      container: 'container | containers',
    },
    hardwareInventory: {
      title: 'hardware inventory',
      pleaseUpgradeYourAgent: '<a href="{url}" target="_blank">Please upgrade your agent</a> for the hardware inventory.',
      model: 'model',
      serialNumber: 'serial number',
      manufacturer: 'manufacturer',
      cores: 'cores',
      coresEnabled: '{count} enabled',
      threads: 'threads',
      numberOfModules: 'number of modules',
      deviceList: '{name} list',
      cpu_total: 'CPUs',
      cpu_cores: 'CPU cores',
      ram_size: 'ram size',
      usb_devices: 'USB devices',
      pci_devices: 'PCI devices',
    },
    smartmon: {
      title: 'S.M.A.R.T Disk Health',
      deviceType: 'device type',
      deviceProtocol: 'device protocol',
      firmwareVersion: 'firmware version',
      powerCycleCount: 'power cycle count',
      interfaceSpeedBps: 'interface speed Bps',
      powerOnTimeHours: 'power on time (hours)',
      reallocatedSectorCount: 'reallocated sector count',
      message: '@:phrase.message',
    },
    services: {
      name: 'services',
      stateTooltip:
        'Don\'t worry about dead services on Linux. "Dead" means "clean shutdown of service" and "exited" means "unexpected termination".',
      pleaseUpgradeYourAgent: '<a href="{url}" target="_blank">Please upgrade your agent</a> to version 1.0.4 or newer to enable the monitoring of services.',
    },
    chart: {
      util: 'Utilization',
      total: 'Total (All Processors)',
      averageOfLastNMinutes:
        'Average Of Last 1 Minute | Average Of Last {count} Minutes',
    },
    messages: {
      someChartsCouldNotBeLoaded: 'Some charts could not be loaded and may temporarily not be available.',
    },
    customizeTable: 'customize',
    noDeleteTag: 'You can\'t delete this tag as it\'s being used for team member ACL',
    modules: {
      module: 'module | modules',
      expandToShowMore: 'expand to show more',
      measurement: 'measurement | measurements',
      lastCheck: '@:checks.lastCheck',
      commandExecuted: 'command executed',
      warnings: '@:phrase.warning | @:phrase.warnings',
      alerts: '@:phrase.alert | @:phrase.alerts',
    },
  },
  charts: {
    from: '@:phrase.from',
    to: '@:phrase.to',
    dataRetentionMessage:
      'Your plan allows {num} days of data retention for graphs.',
    limit: 'last {num} measurements',
    noData: 'no data available for the selected time period',
    clickToTryAgain: 'Click to try again',
    timedOut: 'timedOut',
    graphLoadTextValuesNotTagged: 'Graph could not be loaded. Please make sure to tag text based values. <a href="{url}" target="_blank">More info</a>.',
    memoryUsed: 'Memory Used',
    cpuUtilization: 'CPU Utilization',
    bandwidth: 'Bandwidth',
    bandwidthFor: 'Bandwidth For "{name}"',
    diskIO: 'Disk I/O',
    pleaseUpgradeYourAgent: '<a href="{url}" target="_blank">Please upgrade your agent</a> to see this graph.',
    periods: {
      sixHours: '6 hours',
      twentyFourHours: '24 hours',
      sevenDays: '7 days',
      thirtyDays: '30 days',
    },
  },
  checks: {
    port: 'port',
    icmp: 'ICMP',
    http: 'HTTP',
    https: 'HTTPs',
    smtp: 'SMTP',
    imap: 'IMAP',
    imaps: 'IMAPs',
    ssh: 'SSH',
    pop3: 'POP3',
    pop3s: 'POP3s',
    sip: 'SIP',
    iax2: 'IAX2',
    custom: 'Any TCP',
    httpServer: 'Web Server',
    httpsServer: 'Web SSL Server',
    smtpServer: 'SMTP-Mailserver Server',
    submissionServer: 'SMTP-Submission Server',
    imapServer: 'IMAP on',
    imapsServer: 'IMAP SSL',
    sshServer: 'SSH',
    pop3Server: 'POP3',
    pop3sServer: 'POP3 SSL',
    addICMPCheck: 'add an ICMP ping check',
    updateICMPCheck: 'update ICMP ping check',
    addServiceCheck: 'add a TCP/UDP check',
    addWebCheck: 'add website check',
    addCustomCheck: 'add custom check',
    addSNMPCheck: 'add SNMP check',
    updateServiceCheck: 'update TCP/UDP check',
    updateCustomServiceCheck: 'update custom check',
    updateWebCheck: 'update website check',
    updateCustomCheck: 'update custom check',
    updateSNMPCheck: 'update SNMP check',
    buttonAddCheck: 'Add Check',
    buttonAddCheckAnyways: 'add check anyway',
    buttonUpdateCheckAnyways: 'update check anyway',
    buttonUpdateCheck: 'Update Check',
    buttonEditCheck: 'Edit Check',
    deleteConfirm: 'Delete service check for port {port}?',
    deleteICMPConfirm: 'Delete ICMP ping check?',
    deleteWebCheckConfirm: 'Delete website check "{check}"?',
    deleteCustomCheckConfirm: 'Delete custom check "{check}"?',
    deleteSNMPCheckConfirm: 'Delete SNMP check?',
    customCheckAdded: 'custom check added',
    ICMPCheck: '@:checks.icmp ping check',
    serviceCheck: 'TCP/UDP check',
    serviceCheckForPort: 'TCP/UDP check for port {port}',
    SSLCertificateCheckForPort: '@:host.SSLCertificateCheck for port {port}',
    url_preview: 'URL preview',
    urlToCheck: 'URL to check:',
    httpHeaders: 'HTTP headers:',
    warningIsIp:
      'The host is checked using its ip address. Many web servers do not deliver the right content calling them by IP address. Consider changing the IP address for a dns hostname',
    status: 'status',
    message: 'message',
    lastCheck: 'last check',
    eventCreated: 'event created',
    noExpectedUpdateInterval: 'No expected update interval.',
    howToSendData: 'how to send data',
    learnMoreAboutCustomChecks: 'learn more about custom checks',
    csenderHint: 'The csender executable is part of our monitoring agent and is installed by default.',
    create: 'create',
    goBack: 'go back',
    remaining: 'remaining',
    completed: 'completed',
    hostCreated: 'host {host} created',
    httpCheckCreated: 'HTTP check for {path} created',
    createWebMonitoring: 'create website monitoring',
    reValidate: 're-validate',
    noCheckForNewDataWarning: 'An expected update interval of 0 will disable the check for new data.',
    updateIntervalExceeded: 'update interval exceeded',
    addBasicAuthorizationHeader: '@:button.addBasicAuthorizationHeader',
    addSSLCertificateCheck: 'add SSL certificate check',
    SSLIPWarning: 'Your host is monitored by an IP address. SSL Certificates are valid only for specific hostnames. Checking SSL certificates on IP addresses will very likely result in a false alert. Consider monitoring this host by its hostname (FQDN).',
    statuses: {
      success: 'success',
      error: 'failed',
      pending: 'pending update',
      noData: 'not heard',
    },
    protocol: {
      http: 'HTTP',
      https: 'HTTPs',
    },
    method: {
      get: 'GET',
      post: 'POST',
      head: 'HEAD',
    },
    installation: {
      copyCommand: 'copy command',
      csender: 'csender',
      curl: 'cURL',
      powershell: 'Powershell',
      python: 'Python',
    },
    jobmonInfoDialog: {
      title: 'Job monitoring',
      paragraph1: 'Together with the agent a command-line utility called <span class="{classList}">jobmon</span> or <span class="{classList}">jobmon.exe</span> has been installed.',
      paragraph2: 'Just wrap any command into <span class="{classList}">jobmon</span> and the exit status and errors are submitted to CloudRadar.',
      paragraph3: 'If a command exits with any other status than 0 an alert is created.',
      exampleForLinux: 'example for Linux',
      exampleForWindows: 'example for Windows',
    },
  },
  team: {
    name: 'Team',
    buttonInviteTeamMember: 'Invite Team Member',
    deleteConfirm: 'Delete "{email}"?',
    inviteTeamMember: 'Invite to your team',
    inviteTeamMemberCaption:
      'Regular team members are allowed to manage hosts, configure monitoring, alter thresholds, and manage their own recipients.',
    inviteTeamMemberCaption2:
      'Team admins can manage the team and all recipients, upgrade the plan, and delete the whole account.',
    slotsRemaining: '{remaining} remaining',
    teamSizeExceeded: 'Maximum team size has been reached',
    notJoined: 'not joined, yet.',
    resendInvitation: 'Resend Invitation',
    invitationResent: 'An invitation has been sent.',
    grantAccessToSupport: 'grant access to support',
    doYouWantToGrantTheSupportAccess: 'Do you want to grant the support access?',
    confirmSupportInvitation: 'After confirming, <strong>a team invitation (admin, read/write) is sent to the CloudRadar Support</strong>. You can delete this team member at any time. It will be deleted automatically after 24 hours.',
    roles: {
      admin: 'admin',
      member: 'member (read/write)',
      guest: 'guest (read only)',
      support: 'support (automatically deleted after 24 hours)',
    },
    status: {
      joined: 'joined',
      invited: 'invited',
    },
    limitByTag: {
      label: 'Limit guest user to single host tag',
      noTags: 'You have no tags to limit by',
    },
    limitBySubUnit: {
      label: 'Limit guest user to hosts of subUnit',
    },
  },
  subUnit: {
    name: 'sub-units',
    description: '@:phrase.customers, @:phrase.branches, @:phrase.locations',
    addSubUnit: 'add sub-unit',
    updateSubUnit: 'update sub-unit',
    buttonAddSubUnit: 'add sub-unit',
    buttonUpdateSubUnit: 'update sub-unit',
    deleteConfirm: 'Delete sub-unit "{subUnit}"?'
  },
  events: {
    name: 'events',
    comments: {
      addComment: 'Add comment',
      noComments: 'No comments.',
      pleaseSetANicknameFirst: 'please set a nickname first, before commenting',
      props: {
        statuspage: 'Publish on status pages',
        visibleToGuests: 'Visible for guests',
        forward: 'Forward to recipients',
      },
    },
    noAlertsAvailable: 'There are no alerts to show'
  },
  recipients: {
    name: 'recipients',
    notifications: {
      alerts: 'alerts',
      reminders: 'reminders',
      warnings: 'warnings',
      no_notifications: 'no notifications.',
    },
    reports: {
      summary: 'summary',
      daily: 'daily',
      weekly: 'weekly',
      monthly: 'monthly',
      no_reports: 'no reports.',
    },
    mediatypes: {
      email: 'E-Mail',
      slack: 'Slack',
      msteams: 'Microsoft Teams',
      telegram: 'Telegram',
      pushover: 'Pushover',
      whatsapp: 'WhatsApp',
      webhook: 'Web Hook',
      sms: 'SMS',
      phonecall: 'Phone Call',
      integromat: 'Integromat',
    },
    messageFormats: {
      multipart: 'Multipart/Form-Data',
      jsonRaw: 'JSON-RAW',
    },
    reminderDelays: {
      XMinutes: '{minutes} minutes',
      '30minutes': '30 minutes',
      '1hour': '1 hour',
      '2hours': '2 hours',
      '4hours': '4 hours',
      '12hours': '12 hours',
      '16hours': '16 hours',
      '24hours': '24 hours',
    },
    fieldOptions: {
      hostNameMatches: 'host name matches',
      hostNameIs: 'host name is',
      subUnitIs: 'sub-unit is',
      hostConnectMatches: 'host connect matches',
      hostTagsMatch: 'host tags match',
      eventMessageMatches: 'event message matches',
    },
    deleteConfirm: 'Delete recipient "{sendto}"?',
    notVerified: 'Not verified.',
    resendVerificationLink: 'Resend Verification Link',
    resentVerificationLink: 'Verification link has been resent.',
    buttonAddRecipient: 'Add Recipient',
    buttonUpdateRecipient: 'Update Recipient',
    eventsSendToThisRecipient: 'Events to send to this recipient',
    addRecipient: 'Add Recipient',
    updateRecipient: 'Update {mediatype} Recipient',
    recipientsExceeded: 'Maximum amount of recipients has been reached',
    notificationsValidationError:
      'Please select at least one event for the notification.',
    createNewTelegramBot: 'Create a new Telegram Bot',
    frequencyAndDelayOfReminders: 'Frequency and delay of reminders',
    sendTest: 'send test',
    testMessageSent: 'The test message has been sent!',
    testMessageSentError: 'The test message could not be sent.',
    remindersReadonlyHint:
      'Either Alerts or Warnings must be checked in order to activate this option.',
    eventUuidsReadonlyHint:
      'Either Alerts, Warnings, Recoveries or Comments must be checked in order to activate this option.',
    knowledgeBaseLink: 'Refer to our knowledge base for detailed instructions',
    confirmTelegramConversation:
      'Yes. I confirm I\'ve started a conversation with my bot (@{handle}).\n\n @:recipients.otherwiseSendingMessagesToTelegram',
    confirmTelegramConversationDefaultBot:
      'Yes, I confirm I\'ve started a conversation with CloudRadar.io (@cloudradar_messaging_bot).\n\n @:recipients.otherwiseSendingMessagesToTelegram',
    otherwiseSendingMessagesToTelegram: 'Otherwise sending messages to Telegram will fail silently.',
    botCouldNotBeFound: 'Bot could not be found. Please check your bot access token.',
    sendEventForAllHosts: 'send events for all hosts',
    filters: 'Filters',
    hostName: 'Host name',
    hostConnect: 'Host connect (IP/FQDN)',
    hostTags: 'Host tags',
    eventMessage: 'Event message',
    useWildcard: 'case-insensitive, use * as a wildcard',
    combineFiltersBy: 'combine filters by',
    filtersDoNotApply: 'Filters do not apply to summaries and reports.',
    learnMoreAboutAdvancedRouting: 'Learn more about advanced event routing',
    host: '@:phrase.host',
    logs: 'logs',
    showLogs: 'show logs',
    httpStatusCodeReceived: 'HTTP status code received',
    response: 'response',
    textSent: 'text sent',
    description: '@:phrase.description',
    filtersApplied: '1 filter applied to recipient | {count} filters applied to recipient',
    failuresInTheLast24h: 'Failures in the last 24h',
    administrativelyDisabled: 'administratively disabled',
    recipientAdministrativelyDisabled: 'Recipient administratively disabled due to too many permanent failures.',
    emailHasNotBeenConfirmedYet: 'Email has not been confirmed yet.',
    clickButtonToResendVerificationLink: 'Click here to resend the verification link.',
    useResendVerificationLinkToReEnable: 'Use the \"resend verification link\" button and look for your emails to re-enable this recipient.',
    useResendVerificationLinkToEnable: 'Use the \"resend verification link\" button and look for your emails to enable this recipient.',
    smsPricing: '0.07€/0.08 $USD per SMS charged at the end of the month, excl. VAT.',
    phoneCallPricing: '0.07€/0.08 $USD per phone call charged at the end of the month, excl. VAT.',
    subUnit: '@:phrase.subUnit',
    extraData: {
      title: 'extra data',
      add: '@:phrase.add @:recipients.extraData.title',
      addItem: '@:phrase.add @:phrase.item',
      deleteItem: '@:button.delete @:phrase.item',
    },
  },
  settings: {
    group: {
      profile: 'profile',
      regionalSettings: 'regional settings',
      team: 'team',
      msp: 'MSPs',
      rulesAndHeartbeats: 'rules & heartbeats',
      planBilling: 'Plan & Billing',
      deleteAccount: 'delete account'
    },
    name: 'Settings',
    email: 'e-mail',
    password: 'password',
    userName: 'name',
    nickname: 'nickname',
    timezone: 'time zone',
    dateFormat: 'date format',
    teamName: 'name',
    checkLocation: 'check location',
    defaultCheckLocation: 'default @:settings.checkLocation',
    teamMembers: 'members',
    hosts: 'hosts',
    maximum: 'maximum',
    ofCount: 'of {count}',
    ofCountMax: 'of {count} max.',
    typeYes: 'Type yes...',
    deleteAccountAndAllData: 'Delete account and all data',
    noBackups:
      'No backups are retained. You won\'t be able to recover your data.',
    changePlan: 'Change Plan',
    deleteAccount: 'Delete Account',
    updateMonitoringLocation: 'Update default monitoring location',
    noNickname: 'No nickname set',
    noUserName: 'No name set',
    noTeamname: 'No team name set',
    noTimezone: 'No time zone set',
    enterYourOldPassword: 'Current password...',
    enterYourPassword: 'Enter your new password...',
    confirmYourPassword: 'Confirm your new password...',
    plan: 'plan',
    currentPlan: 'current @:settings.plan',
    updateSetting: 'update setting',
    language: '@:phrase.language',
    setLanguage: 'set language',
    subUnitManagement: 'management of sub-units',
    subUnitManagementDescription: 'By enabling this feature you can assign hosts to @:phrase.customers, @:phrase.branches, @:phrase.locations, or any kind of sub-unit.',
    deleteAccountTeamHasNoOtherMembers:
      'You are about to delete your account which deletes all settings and data. No traces from you will be left on our systems. We are very sad about your decision, but we do what you say. This process is unrecoverable. If you are really sure, type in "yes" and click "Delete Account."',
    deleteAccountTeamHasMembers:
      'You are the only admin of your team. If you proceed your whole team will be deleted <strong>including all member accounts</strong>. We are very sad about your decision, but we do what you say. This process is unrecoverable. If you really want to delete <strong>a whole team</strong>, type in "yes" and click "Delete Account."',
    deleteAccountTeamHasAdmins:
      'Your account will be deleted, but the team and the collected data will remain. It might be possible that you still receive notification because recipients are independent from user account. Please check the recipients before deleting your account. We are very sad about your decision, but we do what you say. This process is unrecoverable. If you are really sure, type in "yes" and click "Delete Account".',
    deleteAccountReasons: {
      missingFeatures: 'It\'s missing features.',
      gotFalseAlerts: 'I\'ve received false alerts.',
      tooComplicated: 'It was too complicated to set up the monitoring.',
      immature: 'Immature overall impression.',
      other: 'Other',
    },
    deleteAccountPleaseTellUsWhy:
      'Please tell us why you wish to delete your account:',
    deleteAccountTellUsMissingFeatures:
      'Please let us know which features you feel are missing (optional)',
    deleteAccountPleaseShareYourOpinionWithUs:
      'Please share your opinion with us (optional)',
    updatePassword: 'update password',
    updateNickname: 'update nickname',
    updateName: 'update name',
    updateTeamname: 'update team name',
    updateTimezone: 'update time zone',
    updateDateFormat: 'update date format',
    updateCheckLocation: 'update @:settings.checkLocation',
    updateDefaultCheckLocation: 'update @:settings.defaultCheckLocation',
    updateCardDetails: 'Update Card Details',
    manageBilling: 'manage billing',
    paymentMethod: 'payment method',
    exp: 'exp.',
    daysLeft: '{num} days left',
    dayLeft: '{num} day left',
    canceledEffectiveOn: 'canceled, effective on {date}',
    viewAndDownloadInvoices: 'view and download invoices',
    viewBankMandate: 'view bank mandate',
    viewAndUpdateBillingAddress: 'view and update billing address',
    productNews: {
      title: 'product news',
      description: 'Receive emails about new features or services.',
    },
    subscribedToProductNews: 'subscribed to product news',
    unsubscribedToProductNews: 'unsubscribed to product news',

    rules: {
      agentHeartbeat: {
        title: 'agent heartbeat',
        description: 'if we don’t hear from your agent(s) at least every {threshold} seconds, you will receive a {severity} notification.'
      },
      frontmanHeartbeat: {
        title: 'frontman heartbeat',
        description: 'if we don’t hear from your Frontman at least every {threshold} seconds, you will receive a {severity} notification.'
      },
      customHeartbeat: {
        title: 'custom check lost heartbeat severity',
        description: 'if one of your custom checks has not sent data within the specified interval you will receive a {severity} notification as per these settings.',
        noThreshold: 'the custom check heartbeat update threshold is configured at the custom check level. Go to the relevant host and edit the update threshold on the custom check itself',
        deactivateWarning: {
          title: 'Are you sure?',
          content1: 'We don\'t recommend disabling this heartbeat as your custom checks may fail silently without you being informed.',
          content2: 'As an alternative you can disable checking the expected update interval at the check level in the check configuration.',
          content3: 'Do you still want to disable this heartbeat on a global level?',
          confirmButton: 'Yes, disable this heartbeat',
          cancelButton: 'No, keep heartbeat active',
        },
      },
    },

    changingTheDefaultCheckLocation: 'Changing the @:settings.defaultCheckLocation will reset all individual public location settings of all hosts. \
                                      All your hosts will be assigned to the @:settings.defaultCheckLocation <strong>"{location}"</strong> again. \
                                      Changing it afterward per host is possible.',
    plans: {
      free: 'free',
      trial: 'trial',
      pro: 'pro',
      business: 'business',
      frozen: 'Your trial period has ended',
      payg: 'payg',
    },
  },
  dashboard: {
    emptyHeading: 'Quite empty here',
    emptySubheading: 'Seems you\'ve deleted all your hosts. You can set up a new host below.',
    introHeading: 'Welcome',
    introSubheading: 'Start your monitoring with 3 simple steps',
    introGuideHeading: '@:host.guide.title',
    introList: {
      introListItem1: 'Set up your first host (any server or website).',
      introListItem2: 'Watch your performance metrics and graphs flowing in.',
      introListItem3: 'Trigger a test alert.<br> And then add more hosts and be in control of your entire network.'
    },
    introIfYouEncounter: 'If you encounter any problem, please',
    introContactUs: '@:learnAndSupport.contactUs',
    introSoWeCanHelp: 'so we can help.',
    addCheck: 'add check',
    addHost: 'add host',
    addHostToGroup: 'add host to group',
    neverChecked: 'never checked',
    lastCheck: '@:checks.lastCheck',
    check: 'checks | check | checks',
    metric: 'metrics | metric | metrics',
    checkHint: 'Number of checks performed through the network',
    metricHint:
      'Number of metrics collected from the agent installed on the host',
    issue: 'Issue',
    issues: 'Issues',
    noHostsWithIssues: 'Be happy! All hosts are doing fine at the moment.',
    host: 'Host | Hosts',
    monitoringPending: 'pending',
    notMonitored: 'not monitored',
    connected: 'connected',
    disconnected: 'disconnected',
    monitoredFrom: 'hosts are monitored from',
    warnings: '@:phrase.warning | @:phrase.warnings',
    alerts: '@:phrase.alert | @:phrase.alerts',
    duration: '@:phrase.duration',
    createWebMonitoring: 'create website monitoring',
    nextRefreshIn: 'next refresh in',
    secValue: '{sec} sec.',
    updateInProgress: 'progress ...',
    lastAlerts: 'Last {n} alerts',
    displayByGroup: 'Display by Group',
    lastValue: 'last value',
    clickGraphsToExpand: 'click on graphs for a more detailed view.',
    events: 'events',
    theRuleHasTriggeredAWarning: 'The rule "{text}" has triggered a warning.',
    theRuleHasTriggeredAnAlert: 'The rule "{text}" has triggered an alert.',
    noDataAvailable: 'No host data available to display.',
    allHosts: 'all hosts',
    hostsGroupedByTags: 'hosts grouped by tags',
    hostsGroupedBySubUnits: 'hosts grouped by sub-unit',
    hostsFilteredBySubUnit: 'hosts filtered by sub-unit',
    filterBySubUnit: 'Filter by sub-unit',
    videos: {
      clickToPlay: 'Click to play video',
      internet: {
        headline: 'How to monitor an internet Server',
        description:
          'Suitable for dedicated servers, VPS, cloud instances, SMTP servers, web servers, game servers and many more.',
      },
      windows: {
        headline: 'How to monitor a Windows Server',
        description:
          'Suitable for intranet servers, dedicated servers, VPS, cloud instances running any kind of Windows OS.',
      },
      linux: {
        headline: 'How to monitor a Linux Server',
        description:
          'Suitable for intranet servers, dedicated servers, VPS, cloud instances running any kind of Linux OS.',
      },
      frontman: {
        headline: 'How to monitor your intranet with frontman',
        description:
          'Suitable for intranet servers, switches, routers, load-balancers, printers, cameras and many more.',
      },
      telegram: {
        headline: 'How to add telegram notifications',
        description:
          'To send notifications via Telegram you need to add the Telegram ID of the recipient in CloudRadar.',
      },
    },
    tileView: 'Tile view',
    miniView: 'Mini view',
    listView: 'List view',
    allHiddenView: {
      alert: `Looks like you've hidden all your hosts from your default dashboard.`,
      groupFilterText: 'You are limiting results using groups or filters.',
      clearGroupsAndFiltersBtn: 'clear all groups & filters',
      hostsWithIssuesFilterApplied: 'You are limiting results to hosts with issues only. Deactivating this setting will reveal all your dashboard enabled hosts.',
      disableShowHostsWithIssuesFilterBtn: 'show all dashboard-enabled hosts',
      hostsWithIssuesFilterAppliedHint: `You can re-add hosts from the {link}, or from each host's configuration page.`,
      hostsWithIssuesFilterAppliedLink: 'main hosts page',
    },
    hostGroups: {
      empty: {
        headline: `You don't have any host groups`,
        text: 'Assign tags to a host with a colon to create groups. eg:',
      },
    },
    frozenPlanMessage: {
      trialHasEnded: 'your trial period has ended.',
      upgradeYourAccount:
        'upgrade your account to a paid plan in order to keep using CloudRadar.',
      upgradeMyAccountNow: 'upgrade my account',
    },
    customers: {
      empty: {
        headline: 'You don\'t have any hosts with customers.',
        text: 'To unlock this view, you have to first assign a customer to a host.',
      },
    },
    customer: {
      empty: {
        headline: 'This customer does not have any hosts assigned.',
        text: 'To unlock this view, you have to first assign a host to this customer.',
      },
    },
    filters: {
      applied: '1 filter applied | {count} filters applied'
    }
  },
  button: {
    logIn: 'log in',
    create: 'create',
    addHost: '@:phrase.add host',
    createHost: '@:phrase.add host, server or device',
    inviteTeamMember: 'invite team member',
    teamSizeExceeded: 'Maximum team size has been reached',
    addRecipient: 'add recipient',
    recipientsExceeded: 'Maximum amount of recipients has been reached',
    addRule: '@:rule.addrule',
    addARule: 'add a @:phrase.rule',
    addFilter: 'add filter',
    cancel: 'cancel',
    cancelReminders: 'cancel @:phrase.reminders',
    close: 'close',
    confirm: 'confirm',
    delete: 'delete',
    edit: 'edit',
    save: 'save',
    embed: 'embed',
    motivate: 'let\'s go',
    copyToClipboard: 'copy to clipboard',
    addFrontman: 'add frontman',
    frontmenExceeded: 'Maximum amount of frontmen has been reached',
    trialEnded: 'Your trial has ended. Please upgrade your plan.',
    goToHostsPage: 'go to hosts page',
    latestData: 'latest data',
    goToLatestData: 'go to latest data',
    settings: 'settings',
    goToHostSettings: 'go to host settings',
    showEvents: 'show events',
    dashboard: 'dashboard',
    hideOnDefaultDashboard: 'hide on default dashboard',
    goToDashboard: 'go to @:button.dashboard',
    hostInventory: 'host inventory',
    hostInfo: 'host info',
    groupInfo: 'group info',
    iUnderstand: 'I understand. Take me to the installation guide.',
    install: 'install',
    installAgent: '@:host.installAgent',
    installAgentNow: '@:host.installAgent now',
    willDoLater: 'will do that later',
    startMonitoring: 'start monitoring now',
    moveUp: 'move up',
    moveDown: 'move down',
    loading: 'loading',
    showGuide: 'show guide',
    reset: 'reset',
    downloadCsv: 'Download CSV',
    runReport: 'Run Report',
    done: 'done',
    skip: 'skip',
    skipForNow: 'skip for now',
    showGraph: 'show graph',
    showData: 'show data',
    verify: 'Verify',
    startAgain: 'Start again',
    update: 'update',
    upgrade: 'upgrade',
    freeTrial: 'Get a free trial',
    createToken: 'create token',
    deleteToken: 'delete token',
    createStatusPage: 'create status page',
    updateStatusPage: 'update status page',
    deleteStatusPage: 'delete page',
    editStatusPage: 'edit page',
    clearEvent: 'clear event',
    dontShowAgain: 'Don\'t show again',
    showMore: 'show more',
    hide: 'hide',
    addHeader: 'add header',
    addCustomHeader: 'add custom header',
    addBasicAuthorizationHeader: 'add basic authorization header',
    removeHeader: 'remove header',
    goToLogs: 'go to logs',
    enable: 'enable',
    disable: 'disable',
    addSubUnit: '@:subUnit.buttonAddSubUnit',
    searchByHostNameOrConnect: 'Search by host name or connect',
    quickAccessHost: 'quick access host',
    getStarted: 'get started',
next: 'next',
    back: 'back',
    finish: 'finish'
  },
  rule: {
    name: 'Rules',
    dialogSubtitles: {
      host: 'host',
      type: 'type',
      condition: 'condition',
      action: 'action',
    },
    addrule: 'Add Rule',
    updateRule: 'Edit Rule',
    buttonAddRule: 'Add Rule',
    buttonUpdateRule: 'save rule',
    matches: 'matches',
    useWildcard: 'use * as wildcard',
    caseSensitive: 'case-sensitive',
    resultsIs: 'result is | results is',
    valueIs: 'value is',
    whenNewCheckResultArrives: 'When new check results arrive',
    ofLast: 'of last',
    deleteConfirm: 'Delete rule "{rule}"?',
    affectedHost: 'affected host',
    processing: '@:phrase.rule processing',
    meetsCondition: 'meets @:phrase.condition',
    then: 'then',
    defaultRuleHint:
      'This is an automatically generated default rule, which can only be deactivated/activated.',
    ifAnyCustomCheck: 'if any custom check',
    containsAnAlertDefinedOnTheSenderSite: 'contains an alert (defined on the sender site)',
    containsAWarningOnTheSenderSite: 'contains a warning (defined on the sender site)',
    sendAnAlert: 'send an alert',
    sendAWarning: 'send a warning',
    heartbeatLink: {
      main: 'Heartbeat configuration is available from the',
      link: 'settings page'
    },
    actions: {
      sendAnAlert: 'send an alert',
      sendAWarning: 'send a warning',
      onlyForSingleHosts: 'only available for single hosts',
      nothing: 'nothing (ignore)',
      alert: '@:phrase.alert | @:phrase.alerts',
      warning: '@:phrase.warning | @:phrase.warnings',
      ignore: 'ignore',
    },
    functions: {
      min: 'min',
      max: 'max',
      avg: 'avg',
      sum: 'sum',
      last: 'last',
    },
    operators: {
      equalTo: 'equal to',
      notEqualTo: 'not equal to',
      greaterThan: 'greater than',
      lessThan: 'less than',
      empty: 'empty',
      notEmpty: 'not empty',
    },
    hostMatchPartOptions: {
      isAny: 'is any',
      is: 'is',
      name: 'name',
      connect: 'FQDN/IP',
      hasATag: 'has a tag',
      any: 'any',
      nameMatches: 'name @:rule.matches',
      connectMatches: 'connect @:rule.matches',
      tag: 'tag',
    },
    hostMatchPartPhrases: {
      all: 'all',
      any: '@:rule.hostMatchPartOptions.any',
      is: '@:rule.hostMatchPartOptions.is',
      nameMatches: '@:rule.hostMatchPartOptions.name @:rule.matches',
      connectMatches: '@:rule.hostMatchPartOptions.connect @:rule.matches',
      hasATagThatMatches:
        '@:rule.hostMatchPartOptions.hasATag that @:rule.matches',
    },
    checkTypes: {
      any: 'all | all checks',
      serviceCheck: 'service | service check',
      webCheck: 'website | website check',
      webAndService: 'website & service | website & service check',
      cagent: '@:phrase.cagent | @:phrase.cagent check',
      customCheck: 'custom | custom check',
      snmpCheck: 'SNMP | SNMP check',
    },
    checkKeys: {
      any: 'any',
      ICMPPingSuccess: 'ICMP Ping Success',
      ICMPPingPacketLoss: 'ICMP Ping Packet Loss',
      ICMPPingPacketLossPercent: 'ICMP Ping Packet Loss Percent',
      ICMPPingRoundTripTime: 'ICMP Ping Round Trip Time (seconds)',
      TCPServiceCheckSuccess: 'TCP Service Check (any) Success',
      TCPServicePerformance: 'TCP Service (any) Performance (seconds)',
      WebcheckAnySuccess: 'Web Check (any) Success',
      WebcheckGetSuccess: 'Web Check (GET) Success',
      WebcheckPostSuccess: 'Web Check (POST) Success',
      WebcheckHeadSuccess: 'Web Check (HEAD) Success',
      WebCheckAnyPerformance: 'Web Check (any) Performance (seconds)',
      FileSystemFreePercent: 'File system free percent (any disk)',
      CPUUtilizationIdlePercent: 'CPU Utilization Idle % (total)',
      CPUUtilizationSystemPercent: 'CPU Utilization System % (total)',
      CPUUtilizationUserPercent: 'CPU Utilization User % (total)',
      CPUUtilizationIowaitPercent: 'CPU Utilization Iowait % (total) Linux Only',
      MemAvailablePercent: 'Memory Available %',
      MemCachedPercent: 'Memory Cached %',
      MemFreePercent: 'Memory Free %',
      MemSharedPercent: 'Memory Shared % Linux only',
      MemUsedPercent: 'Memory Used %',
      TempThresholdPercent: 'Temperature Threshold %',
      NumOfRunningProcessesName: 'Number of running processes (match processname)',
      NumOfRunningProcessesCmdline: 'Number of running processes (match cmdline)',
      serviceState: 'Service state',
      orManuallySpecifyCheckKey: 'Or manually specify check key:',
      SNMPIfOutBPS: 'Bandwidth Threshold Out (bps)',
      SNMPIfInMBPS: 'Bandwidth Threshold In (bps)',
      SNMPIfOutUtilizationPercent: 'Bandwidth Threshold Out (%)',
      SNMPIfInUtilizationPercent: 'Bandwidth Threshold In (%)',
      endsWithWarning: 'Ends With "Warning"',
      endsWithAlert: 'Ends With "Alert"',
      containsAnAlert: 'Contains An Alert',
      containsAWarning: 'Contains A Warning',
      modules: 'Modules',
    },
    expressionAliases: {
      hasFailedForTheFirstTime: 'Has failed for the first time',
      hasFailed2TimesConsecutively: 'Has failed 2 times consecutively',
      hasFailed3TimesConsecutively: 'Has failed 3 times consecutively',
      hasFailed5TimesConsecutively: 'Has failed 5 times consecutively',
      hasFailed8TimesConsecutively: 'Has failed 8 times consecutively',
    },
    wizards: {
      ruleForValidFor: 'Rule valid for...',
      actionSend: 'Action: Send...',
      customKeyRule: {
        headline: 'Add a rule for metric key "{checkKey}"',
        checkKey: 'Metric key...',
        condition: 'Condition...',
        summaryText:
          'If the "{checkKey}" metric on {host}, matches the given condition then you\'ll receive {action}.',
      },
      processRule: {
        headline: 'Add a process monitoring rule',
        processIdentifiedBy: 'Process identified by...',
        alterMatchString:
          'Alter match string... <span class="caption">optional</span>',
        summaryText:
          'If the number of processes specified above on {host} is zero, then you\'ll receive {action}.',
      },
      serviceRule: {
        headline: 'Add a service monitoring rule for \'{service}\'',
        service: 'Service...',
        condition: 'Condition...',
        summaryText:
          'If the "{service}" service on {host} {operator} "{state}", then you\'ll receive {action}.',
      },
      snmpRule: {
        headline: 'Add an SNMP monitoring rule for \'{checkKey}\'',
        checkKey: 'SNMP key...',
        condition: 'Condition...',
        summaryText:
          'If the "{checkKey}" metric on {host}, matches the given condition then you\'ll receive {action}.',
      },
    },
    tooltips: {
      notEmpty: 'is not empty, not null and not (int) 0 and not (string) 0'
    },
  },
  frontman: {
    name: 'frontmen',
    addFrontman: 'add frontman',
    updateFrontman: 'update frontman',
    lastHeartbeat: 'last heartbeat',
    install: {
      description: 'Network devices in a protected intranet are monitored via software called Frontman. Each location requires only one frontman.',
      list: {
        createALocation: 'Create a location by adding a frontman.',
        installTheFrontmanSoftware: 'Install the frontman software on one of your Windows or Linux servers in that location.',
        addDevices: 'Add devices monitored by frontman.',
      },
    },
    hostInfo: {
      title: 'Host Info',
      noData: 'There is no host info for this frontman available, yet.',
      os: '@:phrase.os',
      memory: '@:phrase.memory',
      cpu: '@:phrase.cpu',
      fqdn: '@:phrase.fqdn',
    },
    hostsMonitored: 'hosts monitored',
    buttonAddFrontman: 'add frontman',
    buttonUpdateFrontman: 'update frontman',
    deleteConfirm: 'Delete frontman "{frontman}"?',
    frontmanHostsMonitored: 'Host monitored | Hosts monitored',
    trialPeriodEnded: 'Your trial period has ended. Please upgrade your plan.',
    upgradeYourPlan:
      'The maximum number of frontmen has been reached. Please upgrade your plan.',
    // weWillSendYouAReminder: 'We will send you a reminder before switching off your on-premise monitoring.',
    // youCanMonitorUpTo: 'You can monitor up to {frontmenMaxSize} on-premise locations for the next day. | You can monitor up to {frontmenMaxSize} on-premise locations for the next {trialRemainingDays} days.',
    frontmanExplanation:
      'In order to activate <strong>availability monitor</strong> (agent-less) on intranet devices like routers, switches, load balancers, IP cameras etc within your intranet(s), you need to install a tiny application (Frontman) on one of your servers within that intranet. The Frontman serves as a data collector and transmits availability data of all IP devices you want to monitor.',
    frontmanExplanation2:
      'Frontman <strong>does not monitor</strong> CPU load, memory, disk etc. Please add a host and install the agent from the host configuration.',
    noFrontmen: 'You currently have no frontmen installed.',
    installFrontman: 'install frontman',
    pending: 'waiting for local installation',
    connected: 'connected',
    disconnected: 'disconnected',
    public: '@:phrase.public frontman',
    private: '@:phrase.private frontman',
    publicDescription: 'monitored by public CloudRadar servers in {location}',
    privateDescription: 'monitored by your own frontman server in {location}',
    teamDefault: '@:phrase.team @:phrase.default',
  },
  report: {
    name: 'report',
    reportOf: 'report of {date}',
    noIssues: 'no issues.',
    hostDeleted: 'host deleted',
    to: 'to',
    from: 'from',
    filterByHost: 'Filter by host/server',
    datesBackwardsWarning: 'The start date must be before the end date.',
    dataRetentionMessage:
      'Your plan allows {num} days of data retention for reporting.',
  },
  activity: {
    teamActivities: 'team activities',
    hostActivities: 'host activities',
    userDeleted: 'user deleted',
    backgroundOrAnonymous: 'background process / anonymous',
    to: 'to',
    from: 'from',
    hostState: {
      deleted: 'deleted',
      active: '@:phrase.active',
    },
    table: {
      host: '@:phrase.host',
      period: 'period (UTC)',
      state: 'state',
      timeUnderMonitoring: 'Days under monitoring',
      price: 'Price Net',
    },
  },
  learnAndSupport: {
    title: 'Learn & Support',
    tutorials: 'tutorials',
    startByLearningFromOurVideos: 'start by learning from our videos below',
    didntFindWhatYouAreLookingFor: 'didn\'t find what you are looking for?',
    readOurKnowledgeBase: 'Read our knowledge base',
    contactUs: 'contact us',
  },
  api: {
    name: 'API',
    apiTokens: 'API tokens',
    createToken: 'create token',
    lastUsedBy: 'Last used by "{ip}" {time}.',
    learnMoreVisitOurAPIDocumentation: 'Learn more. Visit our API documentation.',
    bearerTokensAreUsed: 'Bearer tokens are used to authenticate against the public API',
    deleteConfirm: 'Delete token "{name}"?',
    useWithCaution: 'Use with caution. The public API is still under development. Don\'t hesitate to contact us.',
    capabilities: {
      read: 'read',
      write: 'write',
      readOnly: 'read only',
      readAndWrite: 'read and write',
    },
  },
  statusPages: {
    name: 'status pages',
    yourPages: 'your pages',
    create: 'create new status page',
    update: 'update status page',
    deleteConfirm: 'delete status page titled "{title}"?',
    pageSettings: 'page settings',
    includeAllHosts: 'include all hosts',
    limitHostsByTags: 'include only hosts having tags(s)',
    noTagsExist: 'No tags exist. Add tags to hosts to activate this feature.',
    selectTag: 'select 1 or more tags',
    hosts: 'hosts',
    groupByTag: 'group by host tag',
    dontGroup: 'no grouping',
    history: 'history',
    eventsToInclude: 'events to include',
    hideOperational: 'only show hosts with issues',
    alertsOnly: 'alerts only',
    alertsAndWarnings: 'alerts & warnings',
    headerImage: 'header image',
    imageLoading: 'image loading',
    dropZoneText: 'drag & drop here or click to upload header image',
    htmlHint: 'select text for options, links and formatting.',
    embedDialog: {
      title: 'Embed Status Badges',
      intro: 'These status badges can be used to display your system status.<br>Simply copy the style you prefer and paste the code in your website where you want the badge to appear.',
      introNote: 'Note: If you make changes you will need to update your embed code on your web property.',
      liveBadge: {
        title: 'Live Status Badge',
        intro: ' This badge shows live status updates for your systems. You should use this badge if instant status display is important to you.',
      },
      miniBadge: {
        title: 'Mini Status Badge',
        intro: 'This badge is delivered a little more efficiently in the form of an image, but is cached server-side for at least 300 seconds. If instant updates are important to you or your business check out the badge above.',
      },
      copyEmbedCode: 'copy embed code',
      customizeBadge: 'customize badge',
      reset: 'reset',
      preview: 'Preview your badge',
      fullyOperationalText: 'fully operational text',
      operationalWithWarningsText: 'operational with warnings text',
      nonOperationalText: 'non-operational text',
      width: 'width',
      height: 'height',
      showIcon: 'show icon',
      showText: 'show text',
      leftSideLabel: 'left-side label',
      badgeStyle: 'badge style',
    },
  },
  form: {
    field: {
      connect: 'FQDN/IP address',
      email: 'e-mail',
      role: 'role',
      description: '@:phrase.description',
      name: 'name',
      username: 'username',
      password: 'password',
      repeatPassword: 'repeat password',
      search: 'search',
      tags: 'tags',
      tagDropdownHeader: 'Select from your existing tags or create new ones...',
      tagDropdownHeaderNew: 'Create new tags to apply to this host.',
      filterByTag: 'filter by tag',
      mediatype: 'media type',
      alerts: 'alerts',
      warnings: 'warnings',
      reminders: 'reminders',
      dailySummary: 'daily summary',
      dailyReports: 'daily reports',
      weeklyReports: 'weekly reports',
      monthlyReports: 'monthly reports',
      slack_token: 'bot user OAuth access token',
      slack_channel_or_username: 'slack channel or username',
      msteams_webhook_connector: 'connector URL of incoming webhook',
      telegram_user_id: 'telegram user ID',
      bot_access_token: 'bot access token',
      pushover: 'pushover key',
      webhook: 'web hook URL',
      integromat: 'web hook URL',
      messageFormat: 'message format',
      countryCode: 'country code',
      phone: 'phone number',
      service: 'service',
      port: 'port',
      customPort: 'custom port',
      checkInterval: 'check interval',
      preset: 'preset',
      protocol: 'protocol',
      method: 'method',
      path: 'path',
      postData: 'POST data',
      expectedString: 'expected string',
      expectedStringPresence: '@:form.field.expectedString should be',
      expectedStringPresent: 'present',
      expectedStringAbsent: 'not present',
      expectedHttpStatus: 'expected HTTP status',
      httpHeaderName: 'header name',
      httpHeaderValue: 'header value',
      timeOut: 'time out',
      followRedirects: 'follow redirects',
      dontFollowRedirects: 'don\'t follow redirects',
      searchHtmlSource: 'search HTML source',
      timezone: 'time zone',
      region: 'region',
      dateFormat: 'date format',
      dataCenter: 'Your nearest data centre',
      frontmanLocation: 'please select a location near your',
      defaultCheckLocation: 'default check location',
      nickname: 'nickname',
      teamName: 'team name',
      ignoreSSLErrors: 'ignore SSL errors',
      expectedUpdateInterval: 'expected update interval',
      andAffectedHost: 'and affected host',
      andCheckTypeIs: 'and check type is',
      customCheckKey: 'Enter custom check key',
      andCheck: 'and check',
      do: 'do',
      and: '@:phrase.and',
      // exit: 'Exit: No further rule processing if all conditions are met.',
      exit: 'Exit: Avoid sending multiple notifications for these conditions',
      active: '@:phrase.active',
      selectHost: 'select host',
      enterMatchingTag: 'enter matching tag',
      enterMatchingText: 'enter matching text',
      enterMatchingProcess: 'enter matching process (type to filter)',
      enterMatchingService: 'enter matching service',
      matchingText: 'matching text',
      threshold: 'threshold',
      hostMatchCriteria: 'host match criteria',
      checkType: 'check type',
      checkKey: 'check key',
      selectCheckType: 'select check type',
      resultsRange: 'results range',
      operator: 'operator',
      url: 'URL',
      function: 'function',
      chooseOperatingSystem: 'choose your operating system',
      hostNameHint: 'Can be anything you want, it\'s just for internal use, and can be changed later.',
      frontmanDescription: 'Which device/intranet do you wish to monitor?',
      monitoringLocation: 'Monitoring location',
      frontmanHint: 'eg. "Office Intranet"',
      searchFor: 'search for {field}',
      reminderDelay: 'reminder delay',
      maximumReminders: 'maximum reminders',
      subject: 'subject',
      body: 'body',
      seconds: 'seconds',
      action: 'action',
      rememberMe: 'remember me',
      searchByVMName: 'search by VM name',
      searchByContainerName: 'search by container name',
      allHosts: '@:phrase.all hosts',
      singleHost: 'just for <kbd>{host}</kbd>',
      serviceName: 'service name',
      processName: 'process name',
      processCmdline: 'Process command line',
      matchString: 'Match string (case sensitive)',
      anAlert: 'an @:phrase.alert',
      aWarning: 'a @:phrase.warning',
      teamMemberRecipient: 'subscribe new team member to alerts and reports',
      yourName: 'your name',
      companyName: 'company name',
      permission: 'permission',
      searchByAddressOrProtocol: 'search by address or protocol',
      field: 'field | fields',
      title: 'title',
      header: 'header',
      footer: 'footer',
      addComment: 'add comment...',
      VIPPass: 'VIP Pass',
      comments: 'comments',
      recoveries: 'recoveries',
      appendEventIDToSubject: 'append event ID to subject',
      shortId: '@:phrase.shortId',
      additionalInformation: 'additional information',
      subUnit: '@:phrase.subUnit',
      noSubUnits: 'You have no sub-units to limit by',
      noSubUnitsFound: 'No sub-units found.',
      language: '@:phrase.language',
      selectBestFit: 'Which best describes you?',
      fullUrlOfYourWebsite: 'Full URL of your website',
 whatDoYouWantToAchieve: 'what do you want to achieve?',
    },
    hint: {
      url: 'eg. example.com/?search=word',
      pushover: 'pushover key',
      slack_token:
        'Don\'t use your personal user token! Learn how to create a bot {url}.',
      slack_channel_or_username:
        'Channels are prefixed with a #, i.e. #monitoring. Usernames are prefixed with a @, i.e. @john.doe. If field is left blank or channel / username doesn\'t exist, messages will be posted to the #general channel',
      msteams_webhook_connector: 'URL must start with "https://outlook.office.com/webhook/". Learn how to create an incoming webhook connector {url}.',
      telegram_user_id: 'telegram user ID',
      bot_access_token:
        'If you don\'t provide your own bot, you must start a conversation with the Cloudradar.io (@cloudradar_messaging_bot) first.',
      checkName:
        'Max. 25 characters. The check results will be referenced by this key.',
      expectedUpdateInterval:
        'How often do you want to send data? Events can be created, if data is not updated within this time lapse.',
      reminderDelay:
        'time period between reminders. You\'ll get a reminder about unresolved issues every {time}.',
      maximumReminders:
        'maximum of reminders sent (max = {maximumAllowedReminders}). You will get {reminders} reminders.',
      subject: 'the subject must contain at least 5 characters.',
      body: 'the body must contain at least 5 characters.',
      optional: 'optional',
      useWildCardForProcessRule:
        'Use * as a wild card for example to shorten a long command line or to match multiple processes',
      tags:
        'Use a colon to create groups (eg. \'location:office10\', \'country:germany\')',
      shortId: 'A unique phrase that can contain letters, numbers, whitespaces, dashes and underscores.',
      fullUrlOfYourWebsite: 'eg. https://www.example.com/categories/?group=1',
    },
  },
  message: {
    general: {
      maxAmount: 'You\'ve reached the maximum amount of {items} available in you plan.',
      tooManyAttempts: 'Too many attempts.',
      tryAgainIn: 'Try again in {seconds}',
    },
    installation: {
      smartScreenMessage:
        '<strong>Attention!</strong> You might get a warning of Windows Defender SmartScreen trying to block our software. This is a harmless warning. Inside the blue warning window click on "Info". Now a new button "Run anyway" appears. Click it!',
      smartScreenMessage2:
        'Our software fulfills all requirements to be considered as secure software. An official certificate has been requested but it takes time to be approved. We apologize for any inconvenience',
    },
    reminders: {
      cancelRemindersWarning: 'Cancelling reminders cannot be undone.',
      cancelRemindersConfirm:
        'You are about to cancel reminders of the issue "{event}" on host "{host}".',
    },
    events: {
      clearEvent:
        'Are you sure you want to clear the event "{issue}"?',
    },
    success: {
      hostAdd: 'A new host has been created.',
      hostSaved: 'Host "{name}" was saved.',
      hostDelete: 'Host "{name}" was deleted.',
      hideHostOnDashboard: 'Host "{name}" has been hidden from your default dashboard.',
      showHostOnDashboard: 'Host "{name}" is now showing on your default dashboard.',
      hostAlertingActive: 'Alerting for host "{name}" is now active.',
      hostAlertingMuted: 'Alerting for host "{name}" is now muted.',
      teamMemberSaved: '"{email}" was saved.',
      teamMemberDelete: '"{email}" was deleted.',
      teamMemberInvite: 'An invitation has been sent to "{email}".',
      resendTeamMemberInvitation: 'An invitation has been sent to "{email}".',
      recipientAdd: 'Recipient has been created.',
      recipientSaved: 'Recipient was saved.',
      recipientDelete: 'Recipient was deleted.',
      resendVerificationLink: 'A verification link has been sent to "{email}".',
      ICMPCheckAdd: 'ICMP ping check has been created.',
      serviceCheckAdd: '{check} has been created.',
      serviceCheckSaved: '{check} was saved.',
      serviceCheckDelete: '{check} was deleted.',
      webCheckAdd: 'Website check "{check}" has been created.',
      webCheckSaved: 'Website check "{check}" was saved.',
      webCheckDelete: 'Website check "{check}" was deleted.',
      customCheckAdd: 'Custom check "{check}" has been created.',
      customCheckSaved: 'Custom check "{check}" was saved.',
      customCheckDelete: 'Custom check "{check}" was deleted.',
      SNMPCheckAdd: 'SNMP check has been created.',
      SNMPCheckSaved: 'SNMP check was saved.',
      SNMPCheckDelete: 'SNMP check was deleted.',
      userSettingsSaved: 'Your settings were saved. Thank You!',
      ruleAdd: 'A new rule has been created.',
      ruleAddFromWizardSuccess: 'Your new rule has been saved. You\'ll find it under Alerting > Rules.',
      ruleSaved: 'Rule "{rule}" was saved.',
      ruleDelete: 'Rule "{rule}" was deleted.',
      frontmanAdd: 'A new frontman has been created.',
      frontmanSaved: 'Frontman "{frontman}" was saved.',
      frontmanDelete: 'Frontman "{frontman}" was deleted.',
      webSiteMonitoringCreate: 'Your new Website monitoring check was successfully created.',
      remindersCancelled: '"{issue}" reminders of host "{host}" were cancelled.',
      tokenCreate: 'A new token "{name}" has been created.',
      copy: 'Copy successful - it\'s on your clipboard.',
      installCodeCopy: 'Code was copied to your clipboard.',
      tokenCopy: 'The token has been been copied to your clipboard.',
      tokenDelete: 'The token "{name}" was deleted.',
      embedCodeCopy: 'Your embed code has been been copied to your clipboard.',
      planUpgraded: 'Your plan upgrade was successful. You are now on plan "{plan}". Hold tight while we reload your account.',
      planCancelled: 'Your plan "{plan}" is now cancelled. Hold tight while we reload your account.',
      clearEvent: 'The event "{issue}" was cleared.',
      agentSetupFinishedTitle: 'Your host setup is finished!',
      agentSetupFinishedSubTitle: 'It may take up to 90 seconds until the first data has arrived.',
      statusPageCreate: 'A new status page titled "{title}" has been created.',
      statusPageUpdate: 'Status page titled "{title}" was updated.',
      statusPageDelete: 'Your status page was deleted.',
      comment: 'A new comment has been created.',
      jobDelete: 'Results for job "{key}" were deleted.',
      subUnitManagementEnabled: 'Sub-unit management has been enabled.',
      subUnitManagementDisabled: 'Sub-unit management has been disabled.',
      productNewsSubcribed: 'You are now subscribed to product news.',
      productNewsUnsubcribed: 'Your subscription to product news has been canceled.',
      subUnitAdd: 'A new sub-unit has been added.',
      subUnitSaved: 'The sub-unit "{subUnit}" was saved.',
      subUnitDelete: 'The sub-unit "{subUnit}" was deleted.',
      userDelete: 'Your account was deleted.',
    },
    warning: {},
    error: {
      default: 'Something went wrong...',
      defaultServerErrorMessage:
        'Unfortunately, there was an error. This should have not happened. If the problem persists, please contact our support.',
      hostAdd: 'Host could not be created.',
      hostSaved: 'Host "{name}" could not be saved.',
      hostDelete: 'Host "{name}" could not be deleted.',
      hideHostOnDashboard: 'Host "{name}" failed to hide from your default dashboard.',
      showHostOnDashboard: 'Host "{name}" failed to show on your default dashboard.',
      teamMemberDelete: '"{email}" could not be deleted.',
      noSearchResults: 'Your search for "{term}" returned no results.',
      noData: 'No data available.',
      teamMemberInvite: '"{email}" could not be invited.',
      resendTeamMemberInvitation: '"{email}" could not be invited.',
      recipientAdd: 'Recipient could not be created',
      recipientSaved: 'Recipient could not be saved.',
      recipientDelete: 'Recipient could not be deleted.',
      resendVerificationLink: 'Verification link could not be sent to "{email}".',
      ICMPCheckAdd: 'ICMP ping check could not be created',
      serviceCheckAdd: '{check} could not be created',
      serviceCheckSaved: '{check} could not be saved.',
      serviceCheckDelete: '{check} could not be deleted.',
      webCheckAdd: 'Website check "{check}" could not be created',
      webCheckSaved: 'Website check "{check}" could not be saved.',
      webCheckDelete: 'Website check "{check}" could not be deleted.',
      customCheckAdd: 'Custom check "{check}" could not be created',
      customCheckSaved: 'Custom check "{check}" could not be saved.',
      customCheckDelete: 'Custom check "{check}" could not be deleted.',
      SNMPCheckAdd: 'SNMP check could not be created',
      SNMPCheckSaved: 'SNMP check could not be saved.',
      SNMPCheckDelete: 'SNMP check could not be deleted.',
      userSettingsSaved: 'Your settings could not be saved.',
      ruleAdd: 'A new rule could not be created.',
      ruleSaved: 'Rule "{rule}" could not be saved.',
      ruleDelete: 'Rule "{rule}" could not be deleted.',
      frontmanAdd: 'A new frontman could not be created.',
      frontmanSaved: 'Frontman "{frontman}" could not be saved.',
      frontmanDelete: 'Frontman "{frontman}" could not be deleted.',
      webSiteMonitoringCreate: 'Website monitoring could not be created.',
      remindersCancelled: '"{issue}" reminders of host "{host}" could not be cancelled.',
      graphLoad: 'Graph could not be loaded. | Graphs could not be loaded.',
      dataLoad: 'Data could not be loaded.',
      pageNotFound: 'page not found',
      copy: 'Copy failed. Please try again.',
      tokenCreate: 'Token "{name}" could not be created',
      tokenDelete: 'Token "{name}" could not be deleted.',
      clearEvent: 'The event "{issue}" could not be cleared.',
      statusPageCreate: 'Your status page could not be created.',
      statusPageUpdate: 'Your status page could not be updated.',
      statusPageDelete: 'Your status page could not be deleted.',
      comment: 'A new comment could not be created.',
      jobDelete: 'Results for job "{key}" could not be deleted.',
      subUnitManagement: 'Sub-unit management (MSP feature) setting could not be updated.',
      productNews: 'Your subscription to product news could not be updated.',
      subUnitAdd: 'The sub-unit could not be created.',
      subUnitSaved: 'The sub-unit "{subUnit}" could not be saved.',
      subUnitDelete: 'The sub-unit "{subUnit}" could not be deleted.',
      stripeError: 'Unfortunately, there was an error. Your credit card could not be saved. Please try again later.',
      openCheckoutUpgrade: 'Opening page for plan upgrade has failed.',
      userDelete: 'Your account could not be deleted. If this problem persists, please get in touch with us.'
    },
    preflight: {
      failedTitle: 'preflight failed',
      failedText:
        'Before we add checks for normal periodic execution we run the check immediately as a  "preflight" execution. This time the preflight check has failed. We recommend to only apply checks to active and non-failing services. Otherwise, the monitoring will immediately fail causing you to get alerts directly after adding the check. Please review your settings and add this check later when the failing service has been repaired.',
      info:
        'The check has not been executed from the check location it\'ll be performed from on a regular basis. If you\'ve whitelisted our check locations in your firewall you should ignore this warning and add the check anyway.',
    },
    wait: {
      default: 'loading',
      checkPreflight: 'validating check configuration',
      checkAdd: 'adding check',
      checkUpdate: 'updating check',
      hostAdd: 'adding host',
      hostUpdate: 'updating host',
      hostDelete: 'deleting host "{name}"',
      statusPageAdd: 'adding status page',
      statusPageUpdate: 'updating status page',
      statusPageDelete: 'deleting status page',
      frontmanDelete: 'deleting frontman',
    },
  },
  paging: {
    all: '@:phrase.all',
    count: '{pageStart} - {pageStop} of {itemsLength}',
    rowsPerPage: 'rows per page:',
  },
  phrase: {
    dashboard: 'dashboard',
    uuid: 'UUID',
    pid: 'PID',
    pids: 'PIDs',
    ppid: 'PPID',
    parentPID: 'parent PID',
    processName: 'process name',
    command: 'command',
    latest: 'latest',
    oldest: 'oldest',
    loadAvg1: 'load (avg 1)',
    loadAvg5: 'load (avg 5)',
    loadAvg15: 'load (avg 15)',
    action: 'action | actions',
    all: 'all',
    add: 'add',
    is: 'is',
    isNot: 'is not',
    brand: 'CloudRadar',
    disk: 'disk | disks',
    cpu: 'CPU',
    memory: 'memory',
    baseBoard: 'base board',
    ip: 'IP',
    fqdn: 'FQDN',
    connect: '@:phrase.fqdn/@:phrase.ip',
    os: 'OS',
    description: 'description',
    email: 'email | emails',
    name: 'name | names',
    seconds: 'second | seconds',
    state: 'state',
    status: 'status',
    role: 'role | roles',
    acl: 'ACL',
    switchTo: 'switch to {cat}',
    proxy: 'proxy | proxies',
    process: 'process | processes',
    agent: 'agent',
    cagent: 'Agent',
    tag: 'tags | tags',
    type: 'type',
    send_to: 'send to',
    notifications: 'notifications',
    reports: 'reports',
    active: 'active',
    inactive: 'inactive',
    premium: 'premium',
    min: 'min.',
    sec: 'sec.',
    minutes: 'minutes',
    hours: 'hours',
    service: 'service',
    preset: 'preset',
    check_interval: 'check interval',
    custom_port: 'custom port',
    expected_string: 'expected string',
    path: 'path',
    method: 'method',
    coming_soon: 'coming soon',
    showOnDashboard: 'dashboard',
    protocol: 'protocol',
    checkKey: 'check key',
    expectedUpdateInterval: 'expected update interval',
    order: 'order',
    host: 'host | hosts',
    checkType: 'check type',
    checkCondition: 'check @:phrase.condition',
    exit: 'exit',
    continue: 'continue',
    warning: 'warning',
    warnings: 'warnings',
    alert: 'alert',
    alerts: 'alerts',
    congratulation: 'congratulations',
    event: 'event | events',
    duration: 'duration',
    issue: 'issue | issues',
    ago: '{time} ago',
    knowledgeBase: 'knowledge base',
    location: 'location',
    checkName: 'check name',
    lastCheck: 'last check',
    value: 'value',
    unit: 'unit',
    commandLine: 'command line',
    send: 'send',
    rule: 'rule',
    and: 'and',
    condition: 'condition',
    check: 'check | checks',
    port: 'port',
    after: 'after',
    hour: 'hour | hours',
    minute: 'minute | minutes',
    second: 'second | seconds',
    reminders: 'reminders',
    cancelled: 'cancelled',
    comingSoon: 'coming soon',
    byRequest: 'by request',
    close: 'close',
    success: 'success',
    succeeded: 'succeeded',
    error: 'error | errors',
    failed: 'failed',
    create: 'create',
    orCreateNew: 'or create new',
    severity: 'severity | severities',
    message: 'message | messages',
    recovery: 'recovery',
    frontman: 'frontman | frontmen',
    yes: 'yes',
    no: 'no',
    public: 'public',
    private: 'private',
    notAvailable: 'n/a',
    vmName: 'VM name',
    heartbeat: 'heartbeat',
    healthState: 'health state',
    processorLoad: 'processor load',
    assignedMemory: 'assigned memory',
    guid: 'guid',
    uptime: 'uptime',
    CPUWaitTimePerDispatch: 'CPU wait time per dispatch',
    creationTime: 'creation time',
    enabledState: 'enabled state',
    numberOfProcessors: 'number of processors',
    version: 'version',
    running: 'running',
    shutdown: 'shutdown',
    stopped: 'stopped',
    image: 'image',
    recommended: 'recommended',
    notRecommended: 'not recommended',
    optional: 'optional',
    required: 'required',
    network: 'network',
    has: 'has',
    from: 'from',
    to: 'to',
    day: 'day | days',
    filteredBy: 'Filtered By',
    group: 'group | groups',
    user: 'user | users',
    date: 'date',
    title: 'title',
    unlimited: 'unlimited',
    or: 'or',
    areYouSure: 'Are you sure?',
    wantToProceed: 'Do you want to proceed?',
    alerting: 'alerting',
    never: 'never',
    token: 'token | tokens',
    embed: 'embed',
    url: 'url | urls',
    permission: 'permission | permissions',
    lastUsed: 'last used',
    createdAt: 'created at',
    address: 'address | addresses',
    program: 'program | programs',
    percent: 'percent',
    size: 'size',
    upgrade: 'upgrade',
    connectionStatus: 'Connection Status',
    snapshot: 'snapshot | snapshots',
    lessThan: 'less than',
    lessThanOrEq: 'less than or equal to',
    greaterThan: 'greater than',
    greaterThanOrEq: 'greater than or equal to',
    limitTo: 'Limit to',
    snmp: 'SNMP',
    serialNumber: 'serial number',
    removeImage: 'remove image',
    comment: 'comment | comments',
    language: 'language',
    experimental: 'experimental',
    remaining: '{remaining} remaining',
    period: 'period | periods',
    doYouWantToProceed: 'Do you want to proceed?',
    messageType: 'message type',
    attempts: 'attempts',
    text: 'text',
    customHeader: 'custom header',
    notificationsAndReports: 'notifications and reports',
    job: 'job | jobs',
    shortId: 'short ID',
    subUnit: 'sub-unit',
    learnMore: 'learn more',
    start: 'start',
    end: 'end',
    copyright: '© cloudradar.io',
    rightsReserved: 'All rights reserved.',
    enabled: 'enabled',
    disabled: 'disabled',
    here: 'here',
    team: 'team',
    default: 'default',
    item: 'item',
    key: 'key',
    customers: 'customers',
    branches: 'branches',
    locations: 'locations',
    filters: 'filters',
    resend: 'resend',
    skipped: 'skipped',
  },
  validation: {
    email: 'Please enter a valid e-mail address.',
    emailInUse: 'E-Mail address already in use. Try a password reset!?',
    passwordFormat:
      'The password needs to have at least 6 characters with at least one number one lower case letter and one upper case letter.',
    url: 'Please enter a valid url like https://example.com',
    required: '{attribute} is required.',
    minLength: '{attribute} must have at least {min} characters.',
    maxLength: '{attribute} must have at least {max} characters.',
    uniqueTeamEmail: 'There is already an user with that email in your team.',
    uniqueSendTo: 'There is already a recipient of this type with that {attribute}.',
    slackUsername: 'Please enter a valid slack username or channel',
    telegramUserId: 'Please enter a valid telegram user ID',
    telegramAPIToken: 'Please enter a valid telegram API token',
    exact: '{attribute} must have exact {length} characters.',
    sameAs: '{attribute} must be same as {eq}.',
    phoneNumber: 'Please enter a valid phone number',
    integer: 'Only numbers are allowed.',
    port: 'The highest allowed TCP/UDP Port is 65535',
    uniqueCheckError: 'There is already a check for this port.',
    uniqueCustomCheckError: 'There is already a check for this check key.',
    uniqueSNMPCheckError: 'There is already a check for this preset.',
    patternShortId: 'Please enter only letters, numbers, whitespaces, dashes or underscores.',
    uniqueShortId: 'There is already a sub-unit with this short ID.',
    localIPAddress: 'private networks can only be monitored through a private frontman (monitoring agent) which must be installed first.',
    hostNameIP6: 'We are very sorry, but currently the monitoring of IPv6 addresses is not yet possible. We are working on it.',
    confirmation: 'Please enter "{confirmationWord}".',
    host: {
      nameMustBeUnique: 'A host with this name already exists for your team.'
    },
    frontman: {
      frontmanMustBePrivate: 'The monitoring location must be a private frontman.',
      frontmanMustBePublic: 'The monitoring location must be public.',
    },
    passwordsMatch: 'The password confirmation must match your new password'
  },
  hostSetupGuide: {
    incomplete: {
      title: 'setup incomplete...',
      text: 'looks like you need to install the {toBeInstalledString} software for this host.',
      footer: 'click here to see the instructions for getting this host setup.',
    },
    complete: {
      title: 'setup complete...',
      text: 'now we\'re just waiting to receive data.',
      footer: 'just click to access the instructions if you need to reinstall.',
    },
    installAgentInstructions: 'install agent instructions:',
    waiting: 'awaiting {key} data...',
    buttons: 'done',
    skip: 'skip for now',
  },
  install: {
    biggerScreenHint: 'These instructions are best followed from a bigger screen where possible',
    manualHint1: 'For a manual installation refer to our',
    manualHint2:
      'where you will find downloads for almost every operating system.',
    manualHint3: 'Use the following values if the setup is based on a wizard or a graphical user interface.',
    cagent: {
      installWarning:
        'Do not use this installation procedure for any other system than "{host}".',
    },
    frontman: {
      installWarning:
        'Do not use this installation procedure for any other location than "{location}".',
    },
  },
};
